2019-11-19 15:54:45,360 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:47:41,985 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:47:42,225 INFO [root] [TestLogin.py(test01_login_success:21)] - 测试登陆成功接口返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 16:48:06,303 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:48:06,555 INFO [root] [TestLogin.py(test01_login_success:21)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '0d5fbc7a-a240-4ed1-b22d-4c19c22f1631'}
2019-11-19 16:51:16,682 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 16:51:16,928 INFO [root] [TestLogin.py(test01_login_success:22)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '0de5f3f1-b006-4433-b371-9236e60ab029'}
2019-11-19 17:14:54,243 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:14:54,494 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'bc38412e-63cc-42d4-8905-c05776442750'}
2019-11-19 17:14:54,590 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:15:14,371 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:15:14,742 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '4f537647-d350-47e4-b4d1-2bfc0e23b54d'}
2019-11-19 17:15:18,642 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:15:19,120 INFO [root] [TestLogin.py(test01_login_success:24)] - 测试登陆成功接口返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '5a5b98bb-9657-4c7a-97c8-08902a86c0e4'}
2019-11-19 17:15:19,210 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:23:53,145 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:43:31,545 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:43:31,792 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:44:28,050 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:44:28,441 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:48:34,014 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:48:34,244 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:27,554 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:52:27,810 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '062f5728-bc20-4879-ace2-59a9460d3844'}
2019-11-19 17:52:27,903 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:27,994 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:28,085 INFO [root] [TestLogin.py(test04_mobile_is_empty:61)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:52:28,175 INFO [root] [TestLogin.py(test05_password_is_empty:72)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 17:55:39,235 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 17:55:39,483 INFO [root] [TestLogin.py(test06_requests_params_is_empty:83)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-19 18:02:49,345 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 18:02:49,606 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '79c43339-7a3d-4aea-89c9-847a35d84447'}
2019-11-19 18:02:49,699 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:49,791 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:49,879 INFO [root] [TestLogin.py(test04_mobile_is_empty:61)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:49,975 INFO [root] [TestLogin.py(test05_password_is_empty:72)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:02:50,065 INFO [root] [TestLogin.py(test06_requests_params_is_empty:83)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-19 18:03:06,854 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 18:03:07,089 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '80c41ebb-9f39-4b08-9684-dcf27f40792d'}
2019-11-19 18:03:07,181 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:39)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,274 INFO [root] [TestLogin.py(test03_password_is_error:50)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,365 INFO [root] [TestLogin.py(test04_mobile_is_empty:61)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,455 INFO [root] [TestLogin.py(test05_password_is_empty:72)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:03:07,547 INFO [root] [TestLogin.py(test06_requests_params_is_empty:83)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-19 18:13:52,222 INFO [root] [utils.py(read_login_data:25)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:16:40,040 INFO [root] [utils.py(read_login_data:28)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:16:40,040 INFO [root] [utils.py(read_login_data:38)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-19 18:20:14,244 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:28)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:28)] - read_login_data: [{'mobile': '13800000002', 'password': '123456', 'http_code': 200, 'success': True, 'code': 10000, 'message': '操作成功'}, {'mobile': '13900000002', 'password': '123456', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '', 'password': 'error', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}, {'mobile': '13800000002', 'password': '', 'http_code': 200, 'success': False, 'code': 20001, 'message': '用户名或密码错误'}]
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:38)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-19 18:20:14,410 INFO [root] [utils.py(read_login_data:38)] - result_list: [('13800000002', '123456', 200, True, 10000, '操作成功'), ('13900000002', '123456', 200, False, 20001, '用户名或密码错误'), ('13800000002', 'error', 200, False, 20001, '用户名或密码错误'), ('', 'error', 200, False, 20001, '用户名或密码错误'), ('13800000002', '', 200, False, 20001, '用户名或密码错误')]
2019-11-19 18:20:14,513 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '145f5e0f-113d-4283-8b75-4dda32a71da3'}
2019-11-19 18:20:14,513 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '145f5e0f-113d-4283-8b75-4dda32a71da3'}
2019-11-19 18:20:14,607 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,607 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,699 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,699 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,791 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,791 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,883 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-19 18:20:14,883 INFO [root] [TestLoginParams.py(test01_login:25)] - 测试登陆成功返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-20 16:55:15,699 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-20 16:55:16,057 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '75d29772-68ac-4108-9b4b-031d8a3f4496'}
2019-11-20 16:55:16,057 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '75d29772-68ac-4108-9b4b-031d8a3f4496'}
2019-11-20 17:05:43,991 INFO [root] [app.py(init_login_status:44)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 1a970aca-a92f-475a-abfd-fcc169c61b73'}
2019-11-20 17:19:07,709 INFO [root] [app.py(init_login_status:47)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer dba3389b-c632-471c-b77a-a1ce04305485'}
2019-11-20 17:19:07,715 INFO [root] [TestEmp.py(test01:27)] - app.py中的headers的值，初始化时没有值，初始化登陆态函数后的值为：{}
2019-11-20 17:24:05,685 INFO [root] [app.py(init_login_status:42)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '220fddeb-efe6-4cd9-bec0-ea2aa802c2ad'}
2019-11-20 17:24:05,685 INFO [root] [app.py(init_login_status:48)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 220fddeb-efe6-4cd9-bec0-ea2aa802c2ad'}
2019-11-20 17:24:05,690 INFO [root] [TestEmp.py(test01:26)] - app.py中的headers的值，初始化时没有值，初始化登陆态函数后的值为：{'Content-Type': 'application/json', 'Authorization': 'Bearer 220fddeb-efe6-4cd9-bec0-ea2aa802c2ad'}
2019-11-20 17:25:21,852 INFO [root] [app.py(init_login_status:41)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '1de3c76f-e17b-4018-bbc7-348bdb526d1c'}
2019-11-20 17:25:21,852 INFO [root] [app.py(init_login_status:46)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 1de3c76f-e17b-4018-bbc7-348bdb526d1c'}
2019-11-20 17:25:44,159 INFO [root] [app.py(init_login_status:41)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'ac9815c0-7e03-4551-8080-62f085a27acf'}
2019-11-20 17:25:44,159 INFO [root] [app.py(init_login_status:46)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer ac9815c0-7e03-4551-8080-62f085a27acf'}
2019-11-20 17:27:11,566 INFO [root] [app.py(init_login_status:40)] - {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '637eb53b-2efa-4fa0-bfdc-201eaf0bc881'}
2019-11-20 17:27:11,567 INFO [root] [app.py(init_login_status:46)] - {'Content-Type': 'application/json', 'Authorization': 'Bearer 637eb53b-2efa-4fa0-bfdc-201eaf0bc881'}
2019-11-20 17:27:11,574 INFO [root] [TestEmp.py(test01:26)] - app.py中的headers的值，初始化时没有值，初始化登陆态函数后的值为：{'Content-Type': 'application/json', 'Authorization': 'Bearer 637eb53b-2efa-4fa0-bfdc-201eaf0bc881'}
2019-11-21 09:34:25,936 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': '3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer 3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,083 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer 3ae56dad-0f73-41ac-99f7-00baf6198191'}
2019-11-21 09:34:26,183 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:43)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,183 INFO [root] [TestLogin.py(test02_mobile_is_not_exist:43)] - 测试用户名错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,268 INFO [root] [TestLogin.py(test03_password_is_error:54)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,268 INFO [root] [TestLogin.py(test03_password_is_error:54)] - 测试密码错误用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,368 INFO [root] [TestLogin.py(test04_mobile_is_empty:65)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,368 INFO [root] [TestLogin.py(test04_mobile_is_empty:65)] - 测试用户名为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,453 INFO [root] [TestLogin.py(test05_password_is_empty:76)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,453 INFO [root] [TestLogin.py(test05_password_is_empty:76)] - 测试密码为空用例返回的数据为： {'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2019-11-21 09:34:26,553 INFO [root] [TestLogin.py(test06_requests_params_is_empty:87)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 09:34:26,553 INFO [root] [TestLogin.py(test06_requests_params_is_empty:87)] - 测试无参的用例返回的数据为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 09:34:34,265 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:23)] - 测试登陆成功返回的数据为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:34:34,397 INFO [root] [TestLogin.py(test01_login_success:36)] - 请求头： {'Content-Type': 'application/json', 'Authorization': 'Bearer fedf6ab6-0201-46fb-acf6-c48864fcf15a'}
2019-11-21 09:49:27,157 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:50:08,394 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:50:22,874 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:51:13,753 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 09:52:11,767 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:09:40,094 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:10:07,260 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:29:24,318 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:29:24,537 INFO [root] [TestEmp.py(test02_add_emp:35)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:30:44,085 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:30:44,891 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:30:44,891 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:31:33,379 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:31:33,614 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:31:33,614 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:42:22,680 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:42:22,918 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:42:22,918 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:43:12,517 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 10:43:12,769 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:43:12,769 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： <Response [200]>
2019-11-21 10:48:49,048 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:01:20,644 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:13:49,282 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:13:49,531 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197352592879210496'}}
2019-11-21 11:13:49,531 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197352592879210496'}}
2019-11-21 11:18:09,976 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:18:10,213 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:18:10,213 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:24:37,124 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:24:37,363 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197355310075170816'}}
2019-11-21 11:24:37,363 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1197355310075170816'}}
2019-11-21 11:59:13,640 INFO [root] [__init__.py(<module>:6)] - 测试打印日志
2019-11-21 11:59:13,895 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2019-11-21 11:59:13,895 INFO [root] [TestEmp.py(test02_add_emp:36)] - 添加员工接口返回的值为： {'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
